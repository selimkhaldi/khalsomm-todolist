/**
 * Copyright (c) 2016 Sqreen. All Rights Reserved.
 * Please refer to our terms for more information: https://www.sqreen.io/terms.html
 */
'use strict';
const Uuid = require('node-uuid');

const FunctionPatcher = require('../functionPatcher');

const isEmitter = module.exports._isEmitter = function (emitter) {

    return !!emitter.on && !!emitter.addListener && !!emitter.emit;
};

module.exports.enable = function (module, identity) {

    const Server = module.Server;
    const addListener = Server.prototype.addListener;
    const session = require('continuation-local-storage').createNamespace('sqreen_session');

    const holder = {
        end: function () {}
    };
    FunctionPatcher.patchFunction(holder, 'end', identity, 'ServerResponse.on');

    Server.prototype.addListener = function (type, listener) {

        if (type === 'request') {

            return addListener.apply(this, [type, function (req, res) {

                const agrs = arguments;
                const self = this;

                if (!isEmitter(req) || !isEmitter(res)) {
                    return listener.apply(self, agrs);
                }
                session.bindEmitter(req);
                session.bindEmitter(res);


                res.on('finish', () => {

                    setImmediate(() => {

                        holder.end.apply(res, [req]);
                    });
                });

                session.run(() => {

                    // save url properly for sqreen
                    req.__sqreen_url = req.url;
                    req.__sqreen_uuid = Uuid.v4();

                    session.set('req', req);
                    session.set('res', res);

                    return listener.apply(self, agrs);
                });
            }]);
        }

        return addListener.apply(this, arguments);
    };
    Server.prototype.on = Server.prototype.addListener; // see core: lib/events: EventEmitter.prototype.on = EventEmitter.prototype.addListener;

    FunctionPatcher.patchFunction(Server.prototype, 'emit', identity, 'Server.prototype');
};
