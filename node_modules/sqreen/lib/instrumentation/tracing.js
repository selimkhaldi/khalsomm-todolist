/**
 * Copyright (c) 2016 Sqreen. All Rights Reserved.
 * Please refer to our terms for more information: https://www.sqreen.io/terms.html
 */
'use strict';
const Exception = require('../exception');
module.exports.enable = function (module) {

    const Server = module.Server;
    const addListener = Server.prototype.addListener;
    const session = require('continuation-local-storage').createNamespace('sqreen_session');

    Server.prototype.addListener = function (type, listener) {

        if (type === 'request') {

            return addListener.apply(this, [type, function (req, res) {

                try {
                    session.bindEmitter(req);
                    session.bindEmitter(res);
                }
                catch (err) {
                    Exception.report(err).catch(() => {});
                    // something went weird on the creation of req/res objects, let's skip this
                    return listener(req, res);
                }

                session.run(() => {

                    session.set('req', req);
                    session.set('res', res);

                    return listener(req, res);
                });
            }]);
        }

        return addListener.apply(this, [type, listener]);
    };
    Server.prototype.on = Server.prototype.addListener; // see core: lib/events: EventEmitter.prototype.on = EventEmitter.prototype.addListener;

};
